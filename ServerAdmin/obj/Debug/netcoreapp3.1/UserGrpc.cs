// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/user.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace ServerAdmin {
  public static partial class UserService
  {
    static readonly string __ServiceName = "greet.UserService";

    static readonly grpc::Marshaller<global::ServerAdmin.AddUserRequest> __Marshaller_greet_AddUserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ServerAdmin.AddUserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ServerAdmin.TextResponse> __Marshaller_greet_TextResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ServerAdmin.TextResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ServerAdmin.UserRequest> __Marshaller_greet_UserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ServerAdmin.UserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ServerAdmin.GetUsersRequest> __Marshaller_greet_GetUsersRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ServerAdmin.GetUsersRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ServerAdmin.GetUsersResponse> __Marshaller_greet_GetUsersResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ServerAdmin.GetUsersResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ServerAdmin.UpdateUserRequest> __Marshaller_greet_UpdateUserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ServerAdmin.UpdateUserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ServerAdmin.UpdateUserResponse> __Marshaller_greet_UpdateUserResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ServerAdmin.UpdateUserResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::ServerAdmin.AddUserRequest, global::ServerAdmin.TextResponse> __Method_AddUser = new grpc::Method<global::ServerAdmin.AddUserRequest, global::ServerAdmin.TextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddUser",
        __Marshaller_greet_AddUserRequest,
        __Marshaller_greet_TextResponse);

    static readonly grpc::Method<global::ServerAdmin.UserRequest, global::ServerAdmin.TextResponse> __Method_DeleteUser = new grpc::Method<global::ServerAdmin.UserRequest, global::ServerAdmin.TextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUser",
        __Marshaller_greet_UserRequest,
        __Marshaller_greet_TextResponse);

    static readonly grpc::Method<global::ServerAdmin.GetUsersRequest, global::ServerAdmin.GetUsersResponse> __Method_GetAllUsers = new grpc::Method<global::ServerAdmin.GetUsersRequest, global::ServerAdmin.GetUsersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllUsers",
        __Marshaller_greet_GetUsersRequest,
        __Marshaller_greet_GetUsersResponse);

    static readonly grpc::Method<global::ServerAdmin.UpdateUserRequest, global::ServerAdmin.UpdateUserResponse> __Method_ModifyUser = new grpc::Method<global::ServerAdmin.UpdateUserRequest, global::ServerAdmin.UpdateUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ModifyUser",
        __Marshaller_greet_UpdateUserRequest,
        __Marshaller_greet_UpdateUserResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::ServerAdmin.UserReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UserService</summary>
    [grpc::BindServiceMethod(typeof(UserService), "BindService")]
    public abstract partial class UserServiceBase
    {
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::ServerAdmin.TextResponse> AddUser(global::ServerAdmin.AddUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServerAdmin.TextResponse> DeleteUser(global::ServerAdmin.UserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServerAdmin.GetUsersResponse> GetAllUsers(global::ServerAdmin.GetUsersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ServerAdmin.UpdateUserResponse> ModifyUser(global::ServerAdmin.UpdateUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(UserServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddUser, serviceImpl.AddUser)
          .AddMethod(__Method_DeleteUser, serviceImpl.DeleteUser)
          .AddMethod(__Method_GetAllUsers, serviceImpl.GetAllUsers)
          .AddMethod(__Method_ModifyUser, serviceImpl.ModifyUser).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, UserServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServerAdmin.AddUserRequest, global::ServerAdmin.TextResponse>(serviceImpl.AddUser));
      serviceBinder.AddMethod(__Method_DeleteUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServerAdmin.UserRequest, global::ServerAdmin.TextResponse>(serviceImpl.DeleteUser));
      serviceBinder.AddMethod(__Method_GetAllUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServerAdmin.GetUsersRequest, global::ServerAdmin.GetUsersResponse>(serviceImpl.GetAllUsers));
      serviceBinder.AddMethod(__Method_ModifyUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ServerAdmin.UpdateUserRequest, global::ServerAdmin.UpdateUserResponse>(serviceImpl.ModifyUser));
    }

  }
}
#endregion
